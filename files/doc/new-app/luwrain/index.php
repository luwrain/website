<?php include "../../../functions.php"; luwrain_begin_page('/doc/new-app/luwrain/index.php', luwrain_current_lang() == 'ru'?'Класс Luwrain':'Class Luwrain');?>
<?php if (luwrain_current_lang() == 'en') {?>
                <h1>Class org<i>.luwrain.core.Luwrain</i></h1>
                <p>This page is available in Russian language only.</p>

<?php }?>
<?php if (luwrain_current_lang() == 'ru') {?>
                <h1>Класс <i>org.luwrain.core.Luwrain</i></h1>
                <p>См.&#160;также:</p>
                <ul>
                  <li><a href="/api/org/luwrain/core/Luwrain.html">страница <i>org.luwrain.core.Luwrain</i> в&#160;Luwrain&#160;API</a>.</li>
                </ul>
                <p>
                  Класс <i>org.luwrain.core.Luwrain</i> занимает центральное место в&#160;разработке и запуске
                  приложений. Среда создаёт новый экземпляр этого класса и передаёт его в&#160;качестве аргумента
                  для&#160;метода <i>Application.onLaunch()</i>. Это главный и единственный интерфейс, при
                  помощи которого приложение может взаимодействовать со&#160;средой Luwrain, для&#160;которой
                  оно было запущено. Все&#160;прочие классы, входящие в&#160;состав Luwrain&#160;API (например,
                  из&#160;пакетов <i>org.luwrain.controls</i> или <i>org.luwrain.popups</i>) являются либо
                  обёртками для&#160;этого класса, либо типами данных, используемыми его методами. При&#160;этом
                  экземпляры класса <i>org.luwrain.core.Luwrain</i> выполняют также и функцию идентификации
                  приложения, поскольку его&#160;методы при&#160;вызове методов рабочей среды передают ссылку
                  <i>this</i>, таким образом среда всегда может определить, какое приложение вызвало тот
                  или иной метод.
                </p>
                <p>Условно методы этого класса можно разделить на&#160;следующие группы:</p>
                <ul>
                  <li>запуск и закрытие приложений;</li>
                  <li>оповещения об&#160;изменении состояния областей;</li>
                  <li>показ всплывающих областей;</li>
                  <li>генерация речевого вывода;</li>
                  <li>вывод сообщений (<i>message</i>) и подсказок (<i>hint</i>);</li>
                  <li>запуск фрагментов звукового оформления среды;</li>
                  <li>работа с&#160;<a href="<?php echo luwrain_link('/doc/new-app/registry/');?>">реестром</a>;</li>
                  <li>операции с&#160;буфером обмена;</li>
                  <li>работа с&#160;текстовыми константами и контекстом окружения.</li>
                </ul>
                <p>
                  Если назначение некоторых операций достаточно очевидно, то на&#160;других стоит остановиться
                  подробнее. Существует три&#160;типа оповещения об&#160;изменении состояния области: изменение
                  текстового представления области, изменение &#x22;горячей точки&#x22; области и изменение
                  имени области. Если один из&#160;этих атрибутов меняется в&#160;ходе работы приложения,
                  среда должна быть уведомлена, чтобы отразить изменения на&#160;экране. Обратите внимание,
                  что уведомления среды <b>не&#160;приводят к&#160;автоматическому речевому уведомлению пользователя</b>.
                  Другими словами, произвести речевой вывод приложение обязано самостоятельно (если это требуется
                  в&#160;соответствии с&#160;замыслом автора, потому что в&#160;некоторых случаях изменения
                  должны быть выполненны без&#160;речевых уведомлений).
                </p>
                <h2>Читать далее</h2>
                <ul>
                  <li><a href="<?php echo luwrain_link('/doc/new-app/events/');?>">События приложений</a>.</li>
                </ul>

<?php }?>
<?php luwrain_end_page('/doc/new-app/luwrain/index.php');?>
