<?php include "../../../functions.php"; luwrain_begin_page('/doc/ext/controls/index.php', luwrain_current_lang() == 'ru'?'Библиотека стандартных элементов управления':'Standard controls library');?>
<?php if (luwrain_current_lang() == 'en') {?>
<h1>Standard controls library</h1>
<?php }?>
<?php if (luwrain_current_lang() == 'ru') {?>
<h1>Библиотека стандартных элементов управления</h1>

<p>См.&#160;также</p>

<ul>
<li><a href="/api/org/luwrain/controls/ControlEnvironment.html">Страница org.luwrain.controls.ControlEnvironment в&#160;LUWRAIN&#160;API</a></li>
<li><a href="/api/org/luwrain/controls/DefaultControlEnvironment.html">Страница org.luwrain.controls.DefaultControlEnvironment в&#160;LUWRAIN&#160;API</a></li>
</ul>

<p>Классы, перечисленные ниже (кроме вспомогательных классов для редактирования текста),
являются реализациями интерфейса <a href="/api/org/luwrain/core/Area.html">org.luwrain.core.Area</a>
и могут использоваться для&#160;конструирования интерфейса приложений.
Большая их часть готова к&#160;применению,
но есть и исключения, как, например, класс <a href="/api/org/luwrain/controls/NavigationArea.html">org.luwrain.controls.NavigationArea</a>, который является абстрактным.</p>

<p>Согласно дизайну LUWRAIN, элементы управления не&#160;имеют прямого доступа к&#160;ядру системы.
Они могут выполнять взаимодействие с&#160;ним только через <a href="<?php echo luwrain_link('/doc/ext/luwrain/');?>">класс  org.luwrain.core.Luwrain</a>,
который передаётся каждому расширению или приложению  при&#160;инициализации
(приложение получает отдельный экземпляр этого класса, отличный от&#160;экземпляра для&#160;расширения, которому оно принадлежит).
При&#160;этом даже доступ к&#160;классу org.luwrain.core.Luwrain выполняется не&#160;напрямую,
а опосредованно через интерфейс <a href="/api/org/luwrain/controls/ControlEnvironment.html">org.luwrain.controls.ControlEnvironment</a>.
Этот интерфейс является главной точкой, через которую осуществляется  взаимодействие элемента управления с&#160;контекстом исполнения.
Он введён для&#160;решения двух задач:</p>

<ul>
<li>для&#160;реализации гибких возможностей кастомизации (переопределяя методы этого интерфейса, можно гибко модифицировать стандартное поведение элемента управления);</li>
<li>для&#160;реализации удобного механизма, позволяющего осуществлять автоматическое тестирование подготовленной библиотеки. </li>
</ul>

<p>Для&#160;простоты предусмотрена стандартная реализация 
этого интерфейса &#x2014; <a href="/api/org/luwrain/controls/DefaultControlEnvironment.html">org.luwrain.controls.DefaultControlEnvironment</a>.
Она перенаправляет все&#160;вызовы в&#160;предоставленный объект класса org.luwrain.core.Luwrain.</p>

<h2>Область обозрения (NavigationArea)</h2>

<p>См.&#160;также</p>

<ul>
<li><a href="/api/org/luwrain/controls/NavigationArea.html">Страница org.luwrain.controls.NavigationArea в&#160;LUWRAIN&#160;API</a></li>
</ul>

<p>Этот абстрактный класс реализует основные функции перемещения курсора (hot&#160;point) внутри текстовой области,
но не&#160;имеет никаких механизмов хранения контента.
Доступ к&#160;данным, реализуемый при&#160;помощи этого класса, предусматривает режим только для&#160;чтения.
Если необходимо использовать этот&#160;класс, необходимо реализовать три&#160;метода:</p>

<ul>
<li>getLineCount();</li>
<li>getLine();</li>
<li>getAreaName().</li>
</ul>

<p>Поведение этого класса полностью соответствует стандартному поведению средств  невизуального доступа 
при&#160;навигации внутри текстового файла.</p>

<h2>== Простейшая область ({{SimpleArea}})</h2>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/SimpleArea.html Страница {{org.luwrain.controls.SimpleArea}} в&#160;LUWRAIN&#160;API]</li>
</ul>

<p>Этот класс является развитием {{NavigateArea}},
но имеет внутренний контейнер  для&#160;хранения текстового представления.
Таким образом, он может рассматриваться как&#160;готовый элемент управления для&#160;хранения и представления сравнительно небольших  структур данных в&#160;текстовом виде.</p>

<p>== Область редактирования ({{EditArea}}) ==</p>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/EditArea.html Страница {{org.luwrain.controls.EditArea}} в&#160;LUWRAIN&#160;API]</li>
</ul>

<p>область редактирования  является дальнейшим развитием класса {{simpleArea}}
и позволяет осуществлять редактирование текста, хранимого во&#160;внутреннем контейнере.
Возможностей  этого класса достаточно для создания простейшего невизуального текстового редактора,
который не&#160;имеет функций записи файла на&#160;диск и чтения с&#160;диска.</p>

<p>== Список ({{ListArea}}) ==</p>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/ListArea.html Страница {{org.luwrain.controls.ListArea}} в&#160;LUWRAIN&#160;API].</li>
</ul>

<p>Этот класс предназначен для&#160;представления некоторого множества объектов в&#160;виде одномерного списка.
Данные хранятся  во&#160;внешнем объекте,
который должен удовлетворять интерфейсу [/api/org/luwrain/controls/ListModel.html {{org.luwrain.controls.ListModel}}].
Предусмотрены дополнительные возможности по&#160;кастомизации отображения элементов списка 
и их&#160;речевого описания   для&#160;пользователя.</p>

<p>== Таблица ({{TableArea}}) ==</p>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/TableArea.html Страница {{org.luwrain.controls.TableArea}} в&#160;LUWRAIN&#160;API]</li>
</ul>

<p>Класс {{tableArea}} реализует представление и отображение данных,
организованных в&#160;виде двумерной таблицы.
Данные хранятся во&#160;внешнем объекте,
который должен удовлетворять интерфейсу [/api/org/luwrain/controls/TableModel.html {{org.luwrain.controls.TableModel}}].
Предусмотрены дополнительные возможности по&#160;кастомизации отображения ячеек таблицы.</p>

<p>== Дерево ({{TreeArea}}) ==</p>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/TreeArea.html Страница {{org.luwrain.controls.TreeArea}} в&#160;LUWRAIN&#160;API]</li>
</ul>

<p>Объекты класса {{TreeArea}} предназначены для&#160;работы с&#160;множеством объектов,
организованных в&#160;виде иерархической структуры.
Её&#160;хранение осуществляется при&#160;помощи внешнего объекта,
который должен удовлетворять интерфейсу [/api/org/luwrain/controls/TreeModel.html {{org.luwrain.controls.TreeModel}}].</p>

<p>== Форма с&#160;элементами управления ( ({{FormArea}}) ==</p>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/FormArea.html Страница {{org.luwrain.controls.FormArea}} в&#160;LUWRAIN&#160;API]</li>
</ul>

<p>Форма является составной областью, которая  предназначена для&#160;работы с&#160;множеством элементов управления следующих типов:</p>

<ul>
<li>однострочными полями для&#160;ввода текста;</li>
<li>многострочным полем для&#160;ввода текста  (может присутствовать только в&#160;единственном виде);</li>
<li>списками, предлагающими выбор из&#160;множества значений;</li>
<li>переключателями типа "да/нет".</li>
</ul>

<p>Каждый элемент снабжается именем, которое позволяет пользователю понять его&#160;назначение.
Многострочное поле для&#160;ввода текста отображается в&#160;нижней части области под&#160;всеми прочими элементами,
поэтому может присутствовать только в&#160;единственном виде.</p>

<p>== Конструктор сообщений ({{MessageArea}}) ==</p>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/MessageArea.html Страница {{org.luwrain.controls.MessageArea}} в&#160;LUWRAIN&#160;API]</li>
</ul>

<p>Этот класс является развитием {{FormArea}} и предлагает готовый вариант области 
для&#160;составления сообщений электронной почты.
Поддерживается ввод адресата, темы сообщения, текста сообщения, списка получателей копии и множество файлов для&#160;прикрепления к&#160;письму.</p>

<p>== Обозреватель файлов и папок  ({{CommanderArea}}) ==</p>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/CommanderArea.html Страница {{org.luwrain.controls.CommanderArea}} в&#160;LUWRAIN&#160;API]</li>
</ul>

<p>Этот класс реализует поведение панели файлового менеджера, 
которая позволяет просматривать файлы на&#160;диске и перемещаться по&#160;структуре каталогов.</p>

<p>== Календарь ({{CalendarArea}}) ==</p>

<p>См.&#160;также</p>

<ul>
<li>[/api/org/luwrain/controls/CalendarArea.html Страница {{org.luwrain.controls.CalendarArea}} в&#160;LUWRAIN&#160;API].</li>
</ul>

<p>Этот класс позволяет внедрить в&#160;приложение элемент управления для&#160;выбора даты.</p>

<p>== Дополнительные классы для&#160;редактирования текста ==</p>

<p>Существуют четыре дополнительных класса, которые реализуют поведение редактирования текста.
Их принципиальное отличие от&#160;классов, описанных выше, в&#160;том, 
что они не&#160;реализуют интерфейс {{org.luwrain.core.Area}}.
Необходимость их&#160;создания объясняется тем, 
что  редакторы текста могут быть как&#160;заполняющие область целиком, 
так и занимающие только её&#160;некоторую часть (например, в&#160;составе формы). 
Классы разделены на&#160;классы, непосредственно реализующие  поведение редактора текста,
и на&#160;классы, обеспечивающие внедрение редактора текста в&#160;указанную позицию некоторой области.</p>

<p>Ниже приведён список этих классов:</p>

<ul>
<li>[/api/org/luwrain/controls/SingleLineEdit.html {{org.luwrain.controls.SingleLineEdit}}]  &#x2014;  однострочный редактор текста;</li>
<li>[/api/org/luwrain/controls/MultilinedEdit.html {{org.luwrain.controls.MultilinedEdit}}]  &#x2014; многострочный редактор текста;</li>
<li>[/api/org/luwrain/controls/EmbeddedSingleLineEdit.html  {{org.luwrain.controls.EmbeddedSingleLineEdit}}]  &#x2014; класс для&#160;помещения однострочного редактора внутри области со&#160;смещением;</li>
<li>[/api/org/luwrain/controls/EmbeddedMultilinedEdit.html  {{org.luwrain.controls.EmbeddedMultilinedEdit}}]  &#x2014;  класс для&#160;помещения многострочного  редактора внутри области со&#160;смещением.</li>
</ul>

<p>== Читать далее ==</p>

<ul>
<li>[local:/doc/new-app/custom/ Создание собственных элементов управления]</li>
</ul>
<?php }?>
<?php luwrain_end_page('/doc/ext/controls/index.php');?>
