
TARGET community/edu/elearning/terms/cmi5
TITLE RU Понятия CMI5
TITLE EN CMI5 terms

luwrain-page-ru

# Понятия формата CMI5

Стандарт CMI5 был~разработан инициативой ADL совместно
с~Комитетом по~подготовке авиастроительного персонала с~использованием ИТ
(_Aviation Industry Computer-Based Training Committee, AICC_).
Вероятно аббревиатура "CMI5" расшифровывается как~"Computer Managed Instruction, пятая попытка",
но это официально не~зафиксировано.
Несмотря на~то, что CMI5 является идейным развитием формата SCORM,
авторы посчитали, что не~стоит  их~ассоциировать между собой в~восприятии пользователей,
поскольку их назначение и функции различаются достаточно существенно
(SCORM является развитием формата CMI1).
Первая публичная версия спецификации CMI5 была представлена  в~июне 2016~г.

Главное назначение CMI5~--- дополнить протокол xAPI необходимыми сведениями об~учебном курсе в~традиционных форматах дистанционного обучения.
Как уже упоминалось, xAPI является слишком общей спецификацией, которую можно применить в~учебных материалах самой разнообразной природы.
В~нём нет какой-либо конкретной информации о~формате курсов в~том виде, как они чаще всего хранятся и обрабатываются популярными СДО.

Предполагается, что курс дистанционного обучения, соответствующий спецификации CMI5, представляет  собой серию документов в~различных форматах,
упакованных в~архив~ZIP и снабжённых манифестом с~информацией о~курсе.
Важным отличием CMI5 от~SCORM является появление нового понятия~--- назначаемый блок (_Assignable Unit, AU_).
Назначаемый блок снабжён идентификатором, который на~пару с~идентификатором учащегося используется для~централизованного накопления истории работы с~курсом.
Другими словами, система LRS содержит всю~историю, как каждый учащийся работал с~каждым назначаемым блоком.
Цикл работы учащегося с~назначаемым блоком регламентируется в~стандартизированных терминах, как они описаны ниже.

Обработка курса в~формате CMI5 начинается с~файла ```cmi5.xml```,
который должен быть включён в~комплект.
Этот файл выполняет роль манифеста и
содержит в~себе общую информацию о~курсе
(название и описание)
за~которой следуют ссылки на~назначаемые блоки,
каждый из~которых также помечен названием и описанием.
Файл ```cmi5.xml```, как нетрудно предположить из~его имени, должен быть закодирован с~использованием разметки XML.
Пример такого файла можно найти [здесь](https://github.com/adlnet/cmi5-Client-Library/blob/master/Examples/cmi5.xml).

Получив курс, учащийся просматривает список назначаемых блоков и по~своему выбору начинает работу с ними.
Эти действия он может выполнять  с~использованием различных инструментов:
веб~браузеров,
мобильных приложений
или специализированных  платформ.
Далее будем обозначать термином "плеер" тот~инструментарий,
который учащийся использует для~работы с~курсом.
Возможны следующие стадии работы с~каждым назначаемым  блоком:

* учащийся начинает работу с~назначаемым блоком, плеер отправляет в~LRS уведомление с~предоставлением идентификаторов блока  и учащегося;
* плеер запрашивает у~LRS параметры начала работы,
которые могут включать сведения о~предыдущих попытках учащегося работать с~выбранным назначаемым блоком;
* учащийся просматривает материал назначаемого блока и усваивает его,
в это время плеер может вести обмен информацией с~LRS;
* когда учащийся закрывает просмотр назначаемого блока,
плеер передаёт финальный отчёт о~действиях учащегося.

Перед началом работы плеер должен обладать подробной информацией об~используемой LRS,
в~терминологии CMI5 обозначаемой обычно как _endpoint_,
и информации об~учащемся, как он был зарегистрирован в~системе.
Помимо этого также могут быть запрошены сведения для~аутентификации учащегося в~системе,
а~также информация об~учебной сессии, в~рамках которой учащийся изучает выбранный курс.

Как упоминалось в~описании протокола [xAPI](local:../xapi/),
информация о~действиях учащегося передаётся в~форме специальных терминах-глаголах (_verbs_).
CMI5 предлагает следующие глаголы:



* начал (_Launched_): учащийся начал изучение назначаемого блока;
* готов к~изучению (_Initialized_): плеер полностью загрузил все~данные;
* выполнил (_Completed_): учащийся выполнил все~задачи блока (прочитал описания, прошёл викторины и~пр.);
* прошёл (_Passed_): учащийся выполнил одну задачу блока;
* не~прошёл (_Failed_): учащийся не~справился с~одной из~задач блока;
* забросил (_Abandoned_): любое нетипичное прекращение работы с~назначаемым блоком;
* завершил (_Terminated_): учащийся прекратил выполнение задачи;
* готов продолжить (_Satisfied_): учащийся дошёл до~пункта "Продолжить".

## Особенности интеграции с~СДО

Помимо очевидной интеграции плеера CMI5 с~LRS предусматривается также ряд соглашений,
обеспечивающих взаимодействие курса в~формате CMI5 с~системой LMS.
Это сделано прежде всего с~целью обеспечить простоту запуска курса из~СДО~---
пользователь не~должен как-либо погружаться в~вопросы подключения к~LRS,
необходимого для~передачи учебных записей.

Взаимодействие LMS и курса CMI5 обеспечивается прежде всего рядом параметров,
передаваемых через так~называемую строку запуска.
Строку запуска формирует СДО,
кодируя в~ней расположение LRS, идентификацию учащегося и~пр.
Ключевые параметры строки запуска следующие:

* ```endpoint```: адрес, по~которому можно установить соединение с~LRS;
* ```fetch```: адрес для~однократного запроса, возвращающего пользовательский токен доступа;
* ```registration```: идентификатор записи учащегося на~курс.

Способ обработки параметров строки запуска сильно различается от~типа учебного материала.
Сама спецификация CMI5 никак не~регламентирует этот вопрос,
предоставляя авторам курсов  и СДО самостоятельно  проработать необходимый им порядок.
Тем~не~менее, приводимые примеры клиентских библиотек, когда плеер курса сразу интегрирован в~веб-страницу,
предназначенную для~открытия в~веб-браузере,
подразумевают подключение библиотеки на~JavaScript, самостоятельно выполняющей установление соединения с~LRS и передающей информацию об~активности учащегося.

Затрагивает вопрос взаимодействия учебного курса с~LRS  необходимо остановиться на~двух моментах.
Первый из~них связан с~возможностью применения унифицированных мобильных приложений,
возможность использования которых декларируется как~одна из~целей распространения стандарта xAPI.
Проблема в~том, что неясен механизм,
благодаря которому мобильное приложение может получить строку запуска для~открытия курса.
Вместе с~тем, авторы курса могут использовать технологии, функцонирующие в~веб-браузере,
но  отсутствующие в~мобильных приложениях.
Примером таких технологий может служить популярный графический инструмент Flash.популярная графическ
К~сожалению, стандарт CMI5 никак не~декларирует контроль совместимости курсов с~теми или иными технологиями.

Другой вопрос, которому следует уделить внимание,~--- защита от~действий недобросовестных учащихся.
Подготовка инструментария, получающего строку запуска курса, и имитирующего корректную активность по~работе с~ним
путём  отправки нужных сообщений в~LRS,
является сравнительно несложной задачей.
Отсутствие ясного механизма  защиты и прозрачность процесса позволяет разработать инструменты,
которые  позволят защитать курс без~его фактического изучения.





* Читать далее: [Доступность xAPI и CMI5](local:../accessibility/)
* [Вернуться к~оглавлению](local:../)

luwrain-page-en

# CMI5terms