
ENTITLE='Application events'
RUTITLE='События приложений'
TARGET=doc/new-app/events/index.php

luwrain-page-en

= Application events =

This page is available in Russian language only.

luwrain-page-ru

= События приложений =

См.~также:

* [/api/org/luwrain/core/Event.html страница {{org.luwrain.core.Event}} в~Luwrain~API];
* [/api/org/luwrain/core/events/KeyboardEvent.html страница {{org.luwrain.core.events.KeyboardEvent}} в~Luwrain~API];
* [/api/org/luwrain/core/events/EnvironmentEvent.html страница {{org.luwrain.core.events.EnvironmentEvent}} в~Luwrain~API];
* [/api/org/luwrain/core/events/ThreadSyncEvent.html страница {{org.luwrain.core.events.ThreadSyncEvent}} в~Luwrain~API].

Во~время работы приложение получает серию сообщений,
оповещающих о~различных событиях  в~среде Luwrain.
Обработка события  производится путём переопределения методов {{onKeyboardEvent(KeyboardEvent)}}  и {{onEnvironmentEvent(EnvironmentEvent)}} в~классах, реализующих интерфейс [/api/org/luwrain/core/Area.html {{org.luwrain.core.Area}}].
Все~события являются потомками  класса [/api/org/luwrain/core/Event.html {{org.luwrain.core.Event}}].

В~Luwrain выделено три~основных типа событий:

*  события клавиатуры;
* события среды;
* события синхронизаци потоков (являются потомками событий среды, поэтому для~событий этого типа нет специальных методов-обработчиков).

После получения события приложение должно вернуть булевый результат,
обозначающий, было~ли событие обработано.
Значение {{true}} означает, что событие было обработано,
либо отсутствие необходимости обрабатывать это событие.
Значение {{false}} возвращается,
если событие не~имеет смысла в~контексте текущего состояния приложения,
либо если событие приложению неизвестно.
Ядро системы, получив значение {{false}} выполняет некоторый стандартный обработчик 
или воспроизводит уведомление для~пользователя, что действие недоступно.

== События клавиатуры ==

События клавиатуры сигнализируют о~нажатиях клавиш пользователем в~момент, 
когда та или иная область является активной.
Обрабатывая эти события, разработчик может реализовывать нужное ему поведение и реакцию в~ответ на~действия пользователя.
Каждое событие клавиатуры имеет несколько ассоциированных с~ним свойств:

* алфавитно-цифровой код, если нажатая клавиша может быть описано соответствующим значением типа {{char}};
* специальный код, если клавиша не~является клавишей-буквой или клавишей-цифрой, 
как, например, клавиши backspace, insert или delete
(необходимо пользоваться константами в~классе 
[/api/org/luwrain/core/events/KeyboardEvent.html {{org.luwrain.core.events.KeyboardEvent}}]);
* флаги клавиш-модификаторов, таких как control, alt (различаются правый и левый) и shift. 

В~традициях Luwrain клавиши, не~являющиеся алфавитно-цифровыми, могут иметь альтернативное нажатие.
Обычно альтернативное нажатие осуществляется путём удерживания одной из~клавиш-модификаторов.
Трансляция обычного события  с~нажатой клавишей-модификатором выполняется на~уровне ядра системы,
таким образом, приложение получает событие уже с~указанием, что это альтернативное действие.
Перенос проверки на~уровень ядра системы сделан с~целью реализации единой настройки,
позволяющей легко выбрать желаемый способ выполнения альтернативного действия.
Альтернативное действие должно отличаться от~основного незначительной модификацией поведения
с~целью повышения комфорта пользователя.
К~примеру, при~перемещениях вверх-вниз в~файловом менеджере пользователь всегда в~речевом выводе сначала получает информацию о~типе объекта (каталог, файл и~т.~д.),
в~альтернативном режиме информация о~типе может быть пропущена, и это значительно ускорит работу.

== События среды ==

События среды обозначают различные команды, которые  имеют семантику,
неразрывно связанную с~функционированием ядра систему.
В~большинстве случаев единственным важным свойством такого события является его код.
Наиболее типичными подобными событиями являются:

* команда обновить содержимое рабочего пространства (например, перечитать файлы на~диске в~файловом менеджере);
* закрыть приложение или всплывающую область;
* команды "OK" или "Отмена";
* команды копировать, вырезать или вставить  рабочие объекты в/из буфера обмена;
* обработать команду открытия файла.

Многие из~этих событий могли~бы быть  представлены событиями клавиатуры,
но их~единая трансляция в~события среды выполняется централизованно,
чтобы существовала~бы возможность задания единых настроек для~комбинаций клавиш.
Помимо этого, для~основных событий среды  предусмотрены краткие команды,
которые могут быть вызваны пользователем из~командной строки Luwrain (обычно всегда доступна по~нажатию Alt+X).
К~примеру, имея открытым почтовый клиент пользователь в~состоянии получить доступ к~командной строке через нажатие Alt+X,
после этого он может ввести команду "refresh" и нажать Enter.
Ядро системы, получив команду,  переведёт её в~событие среды и отправит приложению,
которое его обработает и выполнит обновление списка почтовых сообщений.
Такое поведение позволяет пользователю выполнить некоторое стандартное действие, 
даже если он забыл, на~какую горячую клавишу оно назначено.

Несколько особую роль играет команда произвести открытие файла.
Функция показа всплывающей области для~открытия файла или каталога является в~Luwrain общесистемной,
но прежде чем выполнить это действие на~системном уровне, среда посылает  соответствующее событие  в~текущее активное приложение.
Это даёт возможность приложению показать модифицированный вариант всплывающий области,
более точно отвечающего контексту  состояния приложения 
(например,  при~команде открыть файл в~файловом менеджере в~области открытия может быть подставлен каталог, совпадающий с~текущим обозреваемым каталогом).
С~другой стороны, открытие файла может быть произведено функциями уже запущенного приложения
без~запуска новой копии.
Если текущее активное приложение отвечает отказом обработать посланную комануд,
рабочее окружение выполняет это действие на~уровне ядра системы.

== События синхронизации многопоточных приложений ==

См.~также:

* [local:/doc/new-app/multithreading/ раздел с~описанием  создания многопоточных приложений].

В~соответствии с~правилами организации среды Luwrain,
взаимодействие с~ядром системы может осуществляться только из~потока,
в~котором функционирует само ядро.
Другими словами, методы класса [/api/org/luwrain/core/Luwrain.html {{org.luwrain.core.Luwrain}}] могут быть вызваны  только из~методов,
получивших управление, будучи вызванными ядром системы.

Тем~не~менее, Luwrain предлагает достаточные возможности для~создания   многопоточных приложений.
В~центре этого механизма находится специальный тип события, 
реализованный классом [/api/org/luwrain/core/events/ThreadSyncEvent.html {{org.luwrain.core.events.ThreadSyncEvent}}].
Если фоновый рабочий поток желает выполнить какие-либо действия, 
связанные с~обновлением интерфейса приложения,
он должен создать экземпляр этого класса и~поместить его в~очередь событий.
Ядро системы выполнит все~необходимые действия, чтобы приложение получило это оповещение в~своём основном потоке,
в~котором оно способно взаимодействовать со~средой.
Более подробно об~этом механизме рассказано в~[local:/doc/new-app/multithreading/ соответствующем разделе.]


== Читать далее ==

* [local:/doc/new-app/controls/ Библиотека стандартных элементов управления]

