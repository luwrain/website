

# Реализация функций редактирования текста

Редактирование текста~--- одна из самых востребованных операций   при работе на ПК,
и это верно не только для случая невизуального  использования ИТ.
При этом во всех ситуациях, когда редактирование текста производится в~невизуальном режиме,
появляются дополнительные требования к~реализации элементов управления, отвечающих за~эту операцию.
На~этой странице  мы рассмотрим основные детали и правила внутренней реализации той части LUWRAIN, которая отвечает за~редактирование многострочного текста
(LUWRAIN различает случае, когда редактируется однострочный и многострочный текст).

Невизуальное редактирование текста~--- это процесс, состоящий из~последовательности элементарных и комплексных операций,
приводящих к~согласованному изменению состояния двух объектов: линейного массива строк и  курсора, положение которого задаётся парой координат на плоскости.
Реализация соответствующих элементов управления  должна быть достаточно гибкой, чтобы отвечать следующим требованиям:

1. Корректировка каждого действия пользователя должна быть комплексной,
то есть  должна существовать возможность построить  целостную реакцию, состоящую из некоторого множества частных корректировок,
часть из которых активизируется для всех элементов управления в системе,
другая часть только для элементов управления, содержащих некоторый конкретный тип текста (естественный язык, язык программирования и т. д.),
третья часть активизируется только для конкретного приложения и т. д.
1. Добавления новых корректировок должно осуществляться как на низком уровне с использованием Java, являющегося основным языком реализации LUWRAIN,
так и на более высоком уровне с использованием пользовательских скриптов (в случае LUWRAIN на языке JavaScript).
1.  Звуковое анонсирование операции  с использованием речевого вывода и коротких звуковых сигналов должно быть максимально согласовано с характером  произошедших изменений.
1. Любые задержки реакции на действие пользователя должны быть предельно минимизированы.

Существует несколько различных стилей операций редактирования текста.
Среди них можно выделить стиль GNU~Emacs, стиль Microsoft Word и множество других,
поэтому LUWRAIN не стремиться следовать конкретному из них (хlдаже при том, что GNU~Emacs оказал максимальное влияние на традиции LUWRAIN),
а предлагает максимальные возможности по реализации того стиля редактирования текста, который будет привычен конкретному пользователю.

Классы LUWRAIN, отвечающие за редактирование многострочного текста  организованы в следущую цепочку:

1. Основной элемент управления, получающий команды пользователя (класс org.luwrain .)
1. Интерфейс модели элемента управления (org.luwrain.controls.MultilineEdit.Model).
1. Цепочка классов-корректоров (экземпляры классов, реализующих интерфейс org.luwrain.controls.MultilineEditCorrector).
1. Базовый интерпретатор  операций редактирования.
1. Две базовые структуры , хранящие информацию о тексте: массив строк и положение курсора.

Операции редактирования ниже будут разделяться на элементарные и комплексные.
Все элементарные операции представлены методами интерфейса org.luwrain.controls.MultilineEdit.Model:

1. Вставить один или несколько символов (putChars).
1. Удалить символ в заданной позиции (deleteChar).
1. Вставить фрагмент текста (insertRegion).
1. Удалить фрагмент текста между двумя заданными позициями (deleteRegion).
1. Объединить две соседние строки (mergeLines).
1. Разбить строку на две в заданной позиции (splitLine).

Как нетрудно заметить, все элементарные действия пользователя  по редактированию текста сводятся к одной (и строго одной) из вышеперечисленных операций.
Работа с фрагментами предусмотрена для операций копирования-вставки с буфером обмена.
Реализация модели элемента управления должна соответствовать следующим требованиям:

1. Положение курсора модель обновляет самостоятельно.
Выполнение каждой операции может быть запрошено в любой  позиции, и курсор должен получить новое положение, если необходимо, автоматически.
1. Если выполнение операции оказалось подменено  любой комбинацией других операций,
то все структуры должны остаться в согласованном состоянии. 

В списке операций нет каких-либо действий по управлению положением курсора,
поскольку весь интерфейс LUWRAIN построен таким образом, что навигация по пользовательскому пространству  реализована по типу навигации в тексте.
Создавать отдельные операций только для редактирования текста нет необходимости.
Все операции в качестве результата своего выполнения возвращают объект класса org.luwrain.controls.MultilineEdit.ModificationResult?
но к нему мы вернёмся позже.

Интерфейс org.lluwrain.controls.MultilineEditCorrector сохраняет все операции org.luwrain.controls.MultilineEdit.Model,
но добавляет к ним возможность выполнения какого-либо комплексной операции редактирования.
Комплексными  мы называем все операции, которые не могут быть сведены к операциям модели без нарушения требований к ней.
Примерами таких операций могут быть замена по регулярному выражению, автоматическое выравнивание текста в столбец и др.

Реализация корректора  обычно работает поверх другого корректора или базового интерпретатора редактирования
с возможностью подменить любую свою операцию любой комбинацией операций нижележащего корректора.
